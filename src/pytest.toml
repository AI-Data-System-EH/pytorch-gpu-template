# Configuration for pytest
#
# https://docs.pytest.org/en/latest/reference.html#ini-options-ref
#
# Usage:
#   pytest [options] [file_or_dir] [file_or_dir] [...]
#
# VSCode (settings.json):
#   "python.testing.pytestEnabled": true,
#   "python.testing.promptToConfigure": true,
#   "python.testing.autoTestDiscoverOnSaveEnabled": true,

# [pytest] ini-options in the first pytest.ini|tox.ini|setup.cfg|pyproject.toml file found:
#
#   markers (linelist):   Markers for test functions
#   empty_parameter_set_mark (string):
#                         Default marker for empty parametersets
#   norecursedirs (args): Directory patterns to avoid for recursion
#   testpaths (args):     Directories to search for tests when no files or directories are given on the command line
#   filterwarnings (linelist):
#                         Each line specifies a pattern for warnings.filterwarnings. Processed after -W/--pythonwarnings.
#   usefixtures (args):   List of default fixtures to be used with this project
#   python_files (args):  Glob-style file patterns for Python test module discovery
#   python_classes (args):
#                         Prefixes or glob names for Python test class discovery
#   python_functions (args):
#                         Prefixes or glob names for Python test function and method discovery
#   disable_test_id_escaping_and_forfeit_all_rights_to_community_support (bool):
#                         Disable string escape non-ASCII characters, might cause unwanted side effects(use at your own risk)
#   console_output_style (string):
#                         Console output: "classic", or with additional progress information ("progress" (percentage) | "count" |
#                         "progress-even-when-capture-no" (forces progress even when capture=no)
#   xfail_strict (bool):  Default for the strict parameter of xfail markers when not given explicitly (default: False)
#   tmp_path_retention_count (string):
#                         How many sessions should we keep the `tmp_path` directories, according to `tmp_path_retention_policy`.
#   tmp_path_retention_policy (string):
#                         Controls which directories created by the `tmp_path` fixture are kept around, based on test outcome.
#                         (all/failed/none)
#   enable_assertion_pass_hook (bool):
#                         Enables the pytest_assertion_pass hook. Make sure to delete any previously generated pyc cache files.
#   junit_suite_name (string):
#                         Test suite name for JUnit report
#   junit_logging (string):
#                         Write captured log messages to JUnit report: one of no|log|system-out|system-err|out-err|all
#   junit_log_passing_tests (bool):
#                         Capture log information for passing tests to JUnit report:
#   junit_duration_report (string):
#                         Duration time to report: one of total|call
#   junit_family (string):
#                         Emit XML for schema: one of legacy|xunit1|xunit2
#   doctest_optionflags (args):
#                         Option flags for doctests
#   doctest_encoding (string):
#                         Encoding used for doctest files
#   cache_dir (string):   Cache directory path
#   log_level (string):   Default value for --log-level
#   log_format (string):  Default value for --log-format
#   log_date_format (string):
#                         Default value for --log-date-format
#   log_cli (bool):       Enable log display during test run (also known as "live logging")
#   log_cli_level (string):
#                         Default value for --log-cli-level
#   log_cli_format (string):
#                         Default value for --log-cli-format
#   log_cli_date_format (string):
#                         Default value for --log-cli-date-format
#   log_file (string):    Default value for --log-file
#   log_file_level (string):
#                         Default value for --log-file-level
#   log_file_format (string):
#                         Default value for --log-file-format
#   log_file_date_format (string):
#                         Default value for --log-file-date-format
#   log_auto_indent (string):
#                         Default value for --log-auto-indent
#   pythonpath (paths):   Add paths to sys.path
#   faulthandler_timeout (string):
#                         Dump the traceback of all threads if a test takes more than TIMEOUT seconds to finish
#   addopts (args):       Extra command line options
#   minversion (string):  Minimally required pytest version
#   required_plugins (args):
#                         Plugins that must be present for pytest to run
#
# Environment variables:
#   PYTEST_ADDOPTS           Extra command line options
#   PYTEST_PLUGINS           Comma-separated plugins to load during startup
#   PYTEST_DISABLE_PLUGIN_AUTOLOAD Set to disable plugin auto-loading
#   PYTEST_DEBUG             Set to enable debug tracing of pytest's internals
#
#
# to see available markers type: pytest --markers
# to see available fixtures type: pytest --fixtures


[tool.pytest.ini_options]
minversion = "6.0"     # Minimum version of pytest required
pythonpath = [ "src" ] # Add paths to sys.path

addopts = [
    # "--doctest-modules",
    # "--collect-only",
    # "--setup-show",
    # "--setup-only",
    # ------------------ Failures  ------------------
    "--maxfail=1",
    # "--full-trace",
    # "--last-failed",
    # "--new-first",
    # ------------------ Capture   ------------------
    "--color=yes",
    # choice: "fd", "sys", "no", "tee-sys"
    "--capture=sys",
    # "--capture=tee-sys",
    # "--capture=no",
    # "-s",             # shortcut for --capture=no
    # "--show-capture=all",
    # "--show-capture=stdout",
    "--show-capture=log",
    # "--show-capture=stderr",
    # "--show-capture=no",
    # ------------------ Coverage  ------------------
    "--cov=.",
    #
    # "--cov-append",
    "--cov-report=html",
    "--cov-report=xml",
    "--no-cov-on-fail",
    # ------------------ Strictness -----------------
    "--strict-config",
    "--strict-markers",
    # ------------------ Verbosity ------------------
    # "--verbose",
    # "-vv",
    # "-q",            # quiet (no output)
    # ------------------ Warnings  ------------------
    "-W module",
    # "-W ignore::DeprecationWarning",
    "-W ignore::DeprecationWarning:pkg_resources",
    "-W ignore::DeprecationWarning:ray._private.parameter",
    # ------------------ Markers   ------------------
    # "-m=mandatory and not ignore",# and not manual",
    # "-m=not ignore",
    # "-m=not ignore and not manual",
    # "-m=not ignore and not manual and not slow",
    # ------------------ Output    ------------------
    # -r : show extra test summary info as specified by chars
    # (f)ailed, (E)error
    # (x)failed, (X)xpassed,
    # (s)skipped, (w)warnings
    # (a)all except passed (p/P), (A)all
    # (p)passed, (P)passed with output
    "-rA",
    # "-rpP",
    # "-rxXs",
    # ------------------ Other     ------------------
    # "-E",    # ignore all PYTHON* environment variables
    # "-OO",   # remove assert statements from code and also remove docstrings
]

log_cli       = true
log_cli_level = "DEBUG"

norecursedirs = [
    ".*",
    ".venv",
    "__*",
    "build",
    "dist",
    "script*",
    "scripts",
    "temp*",
    "tmp*",
]

filterwarnings = [ "ignore::DeprecationWarning" ]

testpaths = [ "**/test", "**/tests" ]

python_files = [ "test_*.py" ]

# python_classes   = [  ] # [ "Test*", "*Test" ]
# python_functions = [  ] # [ "test_*", "*_test" ]

# Markers to be used in tests
markers = [
    "ignore: Ignore this test",
    "mandatory: Must be implemented",
    "manual: Manually run this test",
    "slow: Slow test",
]
